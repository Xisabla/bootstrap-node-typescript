name: Release

on:
  pull_request:
    branches:
      - main

jobs:
  release:
    runs-on: ubuntu-latest

    steps:
      - name: Check author permissions
        id: check-permissions
        run: |
          echo "Checking permissions for user: ${{ github.event.pull_request.user.login }}"
          RESPONSE=$(curl -s -H "Authorization: Bearer ${{ secrets.GITHUB_TOKEN }}" \
                          -H "Accept: application/vnd.github.v3+json" \
                          https://api.github.com/repos/${{ github.repository }}/collaborators/${{ github.event.pull_request.user.login }}/permission)
          echo "API Response: $RESPONSE"
          PERMISSION=$(echo "$RESPONSE" | jq -r '.permission')
          if [[ "$PERMISSION" != "admin" && "$PERMISSION" != "maintain" ]]; then
            echo "User does not have sufficient permissions: $PERMISSION"
            exit 1
          else
            echo "User has sufficient permissions: $PERMISSION"
          fi

      - name: Close PR if insufficient permissions
        if: failure()
        run: |
          gh pr close ${{ github.event.pull_request.number }} --reason "Only admins and maintainers can create PRs to main."
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Checkout code
        uses: actions/checkout@v4
        with:
          ref: ${{ github.event.pull_request.head.ref }}

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version-file: .nvmrc

      - name: Enable corepack
        run: corepack enable

      - name: Install dependencies
        run: yarn install

      - name: Run tests
        run: yarn test

      - name: Build
        run: yarn build

      - name: Bump version
        run: yarn update-version "${{ github.event.pull_request.title }}"

      - name: Generate changelog
        run: yarn changelog

      - name: Commit and tag changes
        run: |
          git config user.name "GitHub Actions"
          git config user.email "github-actions@users.noreply.github.com"
          git add .
          git commit -m "ðŸš€ Chore(release): Update version and changelog"
          git tag $(cat package.json | jq -r .version)

      - name: Push changes
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          git push origin HEAD:$(echo ${{ github.event.pull_request.head.ref }})
          git push --tags
